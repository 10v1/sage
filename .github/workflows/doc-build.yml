name: Build documentation

on:
  pull_request:
  merge_group:
  push:
    branches:
      - master
      - develop
  workflow_dispatch:
    # Allow to run manually

concurrency:
  # Cancel previous runs of this workflow for the same branch
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # Same as in build.yml
  TOX_ENV:                "docker-${{ github.event.inputs.platform || 'ubuntu-focal-standard' }}-incremental"
  BUILD_IMAGE:            "ghcr.io/${{ github.repository }}/sage-${{ github.event.inputs.platform || 'ubuntu-focal-standard' }}-with-targets:ci"
  FROM_DOCKER_REPOSITORY: "ghcr.io/sagemath/sage/"
  FROM_DOCKER_TARGET:     "with-targets"
  FROM_DOCKER_TAG:        ${{ github.event.inputs.docker_tag || 'dev'}}
  EXTRA_CONFIGURE_ARGS:   --enable-fat-binary

jobs:
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install test prerequisites
        # From docker.yml
        run: |
          sudo DEBIAN_FRONTEND=noninteractive apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install tox
          sudo apt-get clean
          df -h
      - name: Merge CI fixes from sagemath/sage
        run: |
          .ci/merge-fixes.sh
        env:
          GH_TOKEN: ${{ github.token }}

      # Building

      - name: Generate Dockerfile
        # From docker.yml
        run: |
          tox -e ${{ env.TOX_ENV }}
          cp .tox/${{ env.TOX_ENV }}/Dockerfile .
        env:
          # Only generate the Dockerfile, do not run 'docker build' here
          DOCKER_TARGETS: ""

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          push:       false
          load:       true
          context:    .
          tags:       ${{ env.BUILD_IMAGE }}
          target:     with-targets
          cache-from: type=gha
          cache-to:   type=gha,mode=max
          build-args: |
            NUMPROC=4
            USE_MAKEFLAGS=-k V=0 SAGE_NUM_THREADS=3 --output-sync=recurse
            TARGETS_PRE=build/make/Makefile
            TARGETS=ci-build-with-fallback

      - name: Start container
        run: |
          docker run --name BUILD -dit \
            --mount type=bind,src=$(pwd),dst=$(pwd) \
            --workdir $(pwd) \
            ${{ env.BUILD_IMAGE }} /bin/sh

      - name: Store old docs
        id: worktree
        run: |
          git config --global --add safe.directory $(pwd)
          git config --global user.email "ci-sage@example.com"
          git config --global user.name "Build & Test workflow"
          # mathjax path in old doc
          mathjax_path_from=$(SAGE_USE_CDNS=no /sage/sage -python -c "from sage_docbuild.conf import mathjax_path; print(mathjax_path)")
          .ci/retrofit-worktree.sh worktree-image /sage
          # mathjax path in new doc
          mathjax_path_to=$(SAGE_USE_CDNS=yes /sage/sage -python -c "from sage_docbuild.conf import mathjax_path; print(mathjax_path)")
          new_version=$(cat src/VERSION.txt)
          # Wipe out chronic diffs between old doc and new doc
          (cd /sage/local/share/doc/sage/html/en && \
           find . -name "*.html" | xargs sed -i -e '/class="sidebar-brand-text"/ s/Sage [0-9a-z.]* /Sage '"$new_version"' /' \
                                                -e 's;'"$mathjax_path_from"';'"$mathjax_path_to"';' \
                                                -e '\;<script type="application/vnd\.jupyter\.widget-state+json">;,\;</script>; d')
          # Create git repo from old doc
          (cd /sage/local/share/doc/sage/html/en && \
           git init && \
           (echo "*.svg binary"; echo "*.pdf binary") >> .gitattributes && \
           (echo ".buildinfo"; echo '*.inv'; echo '.git*'; echo '*.svg'; echo '*.pdf'; echo '*.png'; echo 'searchindex.js') > .gitignore; \
           git add -A && git commit --quiet -m "old")
        shell: sh .ci/docker-exec-script.sh BUILD . {0}

      - name: Build docs
        id: docbuild
        # Always non-incremental because of the concern that
        # incremental docbuild may introduce broken links (inter-file references) though build succeeds
        run: |
          export MAKE="make -j2 --output-sync=recurse" SAGE_NUM_THREADS=2
          export SAGE_USE_CDNS=yes
          mv /sage/local/share/doc/sage/html/en/.git /sage/.git-doc
          make doc-clean doc-uninstall
          mkdir -p /sage/local/share/doc/sage/html/en/ && mv /sage/.git-doc /sage/local/share/doc/sage/html/en/.git
          ./config.status && make sagemath_doc_html
        shell: sh .ci/docker-exec-script.sh BUILD ./worktree-image {0}

      - name: Copy docs
        id: copy
        if: (success() || failure()) && steps.docbuild.outcome == 'success'
        run: |
          set -ex
          mkdir -p ./docs
          (cd /sage/local/share/doc/sage/html/en && git commit -a -m 'new')
          # Wipe out chronic diffs between old doc and new doc
          (cd /sage/local/share/doc/sage/html/en && \
           find . -name "*.html" | xargs sed -i -e '\;<script type="application/vnd\.jupyter\.widget-state+json">;,\;</script>; d')
          # Create CHANGES.html
          echo '<html>' > ./docs/CHANGES.html
          echo '<head>' >> ./docs/CHANGES.html
          echo '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/styles/default.min.css">' >> ./docs/CHANGES.html
          echo '<script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/highlight.min.js"></script>' >> ./docs/CHANGES.html
          echo '<script>hljs.highlightAll();</script>' >> ./docs/CHANGES.html
          cat >> ./docs/CHANGES.html << EOF
          <script>
          document.addEventListener('DOMContentLoaded', () => {
            const diffSite = 'https://pianomister.github.io/diffsite/'
            const baseDocURL = 'https://sagemath-tobias.netlify.app/'
            const diffParagraphs = document.querySelectorAll('p.diff');
            diffParagraphs.forEach(paragraph => {
              const rootURL = window.location.origin + '/';
              const docAnchor = paragraph.querySelector('a');
              const path = docAnchor.textContent; // .href doesn't work
              const anchor = document.createElement('a');
              anchor.href = diffSite + '?url1=' + rootURL + path + '&url2=' + baseDocURL + path;
              anchor.textContent = 'compare with the base';
              anchor.setAttribute('target', '_blank');
              paragraph.appendChild(anchor);
            });
          });
          </script>
          EOF
          echo '</head>' >> ./docs/CHANGES.html
          echo '<body>' >> ./docs/CHANGES.html
          (cd /sage/local/share/doc/sage/html/en && git diff HEAD^; rm -rf .git) > ./docs/diff.txt
          /sage/sage -python - << EOF
          import re, html
          with open('./docs/diff.txt', 'r') as f:
              diff_text = f.read()
              diff_blocks = re.split(r'^(?=diff --git)', diff_text, flags=re.MULTILINE)
              out_blocks = []
              for block in diff_blocks:
                  match = re.search(r'^diff --git a/(.*) b/\1', block, flags=re.MULTILINE)
                  if match:
                      path = match.group(1)
                      out_blocks.append(f'<p class="diff"><a href="{path}">{path}</a>&emsp;</p>\n<pre><code class="language-diff">' + html.escape(block).strip() + '</code></pre>')
              output_text = '\n'.join(out_blocks)
          with open('./docs/diff.html', 'w') as f:
              f.write(output_text)
          EOF
          cat ./docs/diff.html >> ./docs/CHANGES.html
          echo '</body>' >> ./docs/CHANGES.html
          echo '</html>' >>./docs/CHANGES.html
          rm ./docs/diff.txt ./docs/diff.html
          (cd /sage/local/share/doc/sage/html/en && git reset --hard HEAD)
          # For some reason the deploy step below cannot find /sage/...
          # So copy everything from there to local folder
          # We also need to replace the symlinks because netlify is not following them
          cp -r -L /sage/local/share/doc/sage/html/en/* ./docs
          # Zip everything for increased performance
          zip -r docs.zip docs
        shell: sh .ci/docker-exec-script.sh BUILD . {0}

      - name: Upload docs
        if: (success() || failure()) && steps.copy.outcome == 'success'
        uses: actions/upload-artifact@v3
        with:
          name: docs
          path: docs.zip
