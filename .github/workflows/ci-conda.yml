name: Build & Test using Conda

on:
  pull_request:
    types: [opened, synchronize]
  push:
    tags:
      - '*'
    branches:
      - 'public/build/**-runci'
  workflow_dispatch:
    # Allow to run manually

concurrency:
  # Cancel previous runs of this workflow for the same branch
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Conda
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2

      - name: Check for Miniconda
        id: check_conda
        run: echo ::set-output name=installed::$CONDA

      # Miniconda is installed by default in the ubuntu-latest, however not in the act-image to run it locally
      - name: Install Miniconda
        if: steps.check_conda.outputs.installed == ''
        run: |
          wget https://repo.anaconda.com/miniconda/Miniconda3-py39_4.10.3-Linux-x86_64.sh -O ~/miniconda.sh
          bash ~/miniconda.sh -b -p $HOME/miniconda
          echo "CONDA=$HOME/miniconda" >> $GITHUB_ENV

      - name: Prepare
        # Create conda environment file
        run: |
          sudo apt-get update
          sudo apt-get install -y gettext autoconf automake libtool pkg-config
          ./bootstrap

      - name: Cache conda packages
        uses: actions/cache@v2
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ hashFiles('src/environment.yml') }}

      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.8
          mamba-version: "*"
          channels: conda-forge,defaults
          channel-priority: true
          activate-environment: sage-build
          environment-file: src/environment.yml

      - name: Print Conda environment
        shell: bash -l {0}
        run: |
          conda info
          conda list

      - name: Configure
        shell: bash -l {0}
        run: ./configure --prefix=$CONDA_PREFIX --enable-build-as-root --without-system-gcc --with-python=$CONDA_PREFIX/bin/python
        
      - name: Build
        shell: bash -l {0}
        run: |
          pip install --no-build-isolation -v -v -e pkgs/sage-conf pkgs/sage-setup 
          pip install --no-build-isolation -v -v -e src
        env:
          SAGE_NUM_THREADS: 2

      - name: Test
        shell: bash -l {0}
        run: ./sage -t --all -p0
