name: Build & Test

on:
  pull_request:
  merge_group:
  push:
    branches:
      - master
      - develop
    # Ignore pushes on tags to prevent two uploads of codecov reports
    tags-ignore: ['**']
  workflow_dispatch:
    # Allow to run manually
    inputs:
      platform:
        description: 'Platform'
        required: true
        default: 'ubuntu-focal-standard'
      docker_tag:
        description: 'Docker tag'
        required: true
        default: 'dev'

concurrency:
  # Cancel previous runs of this workflow for the same branch
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # Adapted from docker.yml
  TOX_ENV:                "docker-${{ github.event.inputs.platform || 'ubuntu-focal-standard' }}-incremental"
  BUILD_IMAGE:            "ghcr.io/${{ github.repository }}/sage-${{ github.event.inputs.platform || 'ubuntu-focal-standard' }}-with-targets:ci"
  FROM_DOCKER_REPOSITORY: "ghcr.io/sagemath/sage/"
  FROM_DOCKER_TARGET:     "with-targets"
  FROM_DOCKER_TAG:        ${{ github.event.inputs.docker_tag || 'dev'}}
  EXTRA_CONFIGURE_ARGS:   --enable-fat-binary

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
      - name: Install test prerequisites
        # From docker.yml
        run: |
          sudo DEBIAN_FRONTEND=noninteractive apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install tox
          sudo apt-get clean
          df -h
      - name: Merge CI fixes from sagemath/sage
        # From docker.yml
        # This step needs to happen after the commit sha is put in DOCKER_TAG
        # so that multi-stage builds can work correctly.
        run: |
          .ci/merge-fixes.sh
        env:
          GH_TOKEN: ${{ github.token }}

      # Building

      - name: Generate Dockerfile
        # From docker.yml
        run: |
          tox -e ${{ env.TOX_ENV }}
          cp .tox/${{ env.TOX_ENV }}/Dockerfile .
        env:
          # Only generate the Dockerfile, do not run 'docker build' here
          DOCKER_TARGETS: ""

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        id: image
        uses: docker/build-push-action@v5
        with:
          push:       false
          load:       true
          context:    .
          tags:       ${{ env.BUILD_IMAGE }}
          target:     with-targets
          cache-from: type=gha
          cache-to:   type=gha,mode=max
          build-args: |
            NUMPROC=4
            USE_MAKEFLAGS=-k V=0 SAGE_NUM_THREADS=3 --output-sync=recurse
            TARGETS_PRE=build/make/Makefile
            TARGETS=ci-build-with-fallback

      - name: Start container
        run: |
          docker run --name BUILD --pull never -dit \
                     --mount type=bind,src=$(pwd),dst=$(pwd) \
                     --workdir $(pwd) \
                     ${{ steps.image.outputs.imageid }} /bin/sh

      # Testing

      - name: Test changed files (sage -t --new)
        run: |
          export MAKE="make -j2 --output-sync=recurse" SAGE_NUM_THREADS=2
          # We run tests with "sage -t --new"; this only tests the uncommitted changes.
          ./sage -t --new -p2
        shell: sh .ci/docker-exec-script.sh BUILD /sage {0}

  mod:
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      fail-fast: false
      matrix:
        targets:
          - sagemath_categories-check
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
      - name: Install test prerequisites
        # From docker.yml
        run: |
          sudo DEBIAN_FRONTEND=noninteractive apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install tox
          sudo apt-get clean
          df -h
      - name: Merge CI fixes from sagemath/sage
        # From docker.yml
        # This step needs to happen after the commit sha is put in DOCKER_TAG
        # so that multi-stage builds can work correctly.
        run: |
          .ci/merge-fixes.sh
        env:
          GH_TOKEN: ${{ github.token }}

      # Building

      - name: Generate Dockerfile
        # From docker.yml
        run: |
          tox -e ${{ env.TOX_ENV }}
          cp .tox/${{ env.TOX_ENV }}/Dockerfile .
        env:
          # Only generate the Dockerfile, do not run 'docker build' here
          DOCKER_TARGETS: ""

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        id: image
        uses: docker/build-push-action@v5
        with:
          push:       false
          load:       true
          context:    .
          tags:       ${{ env.BUILD_IMAGE }}
          target:     with-targets
          cache-from: type=gha
          cache-to:   type=gha,mode=max
          build-args: |
            NUMPROC=4
            USE_MAKEFLAGS=-k V=0 SAGE_NUM_THREADS=3 --output-sync=recurse
            TARGETS_PRE=build/make/Makefile
            TARGETS=ci-build-with-fallback

      - name: Start container
        run: |
          docker run --name BUILD --pull never -dit \
                     --mount type=bind,src=$(pwd),dst=$(pwd) \
                     --workdir $(pwd) \
                     ${{ steps.image.outputs.imageid }} /bin/sh

      # Testing

      - name: Test modularized distributions
        run: |
          export MAKE="make -j2 --output-sync=recurse" SAGE_NUM_THREADS=2
          make V=0 tox-ensure && make ${{ matrix.targets }}
        shell: sh .ci/docker-exec-script.sh BUILD /sage {0}

  test-long:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
      - name: Install test prerequisites
        # From docker.yml
        run: |
          sudo DEBIAN_FRONTEND=noninteractive apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install tox
          sudo apt-get clean
          df -h
      - name: Merge CI fixes from sagemath/sage
        # From docker.yml
        # This step needs to happen after the commit sha is put in DOCKER_TAG
        # so that multi-stage builds can work correctly.
        run: |
          .ci/merge-fixes.sh
        env:
          GH_TOKEN: ${{ github.token }}

      # Building

      - name: Generate Dockerfile
        # From docker.yml
        run: |
          tox -e ${{ env.TOX_ENV }}
          cp .tox/${{ env.TOX_ENV }}/Dockerfile .
        env:
          # Only generate the Dockerfile, do not run 'docker build' here
          DOCKER_TARGETS: ""

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        id: image
        uses: docker/build-push-action@v5
        with:
          push:       false
          load:       true
          context:    .
          tags:       ${{ env.BUILD_IMAGE }}
          target:     with-targets
          cache-from: type=gha
          cache-to:   type=gha,mode=max
          build-args: |
            NUMPROC=4
            USE_MAKEFLAGS=-k V=0 SAGE_NUM_THREADS=3 --output-sync=recurse
            TARGETS_PRE=build/make/Makefile
            TARGETS=ci-build-with-fallback

      - name: Start container
        run: |
          docker run --name BUILD --pull never -dit \
                     --mount type=bind,src=$(pwd),dst=$(pwd) \
                     --workdir $(pwd) \
                     ${{ steps.image.outputs.imageid }} /bin/sh

      # Testing

      - name: Pytest
        if: (success() || failure()) && contains(github.ref, 'pytest')
        run: |
          ./sage -python -m pip install coverage pytest-xdist
          ./sage -python -m coverage run -m pytest -c tox.ini --doctest-modules || true
        # Increase the length of the lines in the "short summary"
        shell: sh .ci/docker-exec-script.sh BUILD /sage COLUMNS=120 {0}

      - name: Test all files (sage -t --all --long)
        run: |
          ./sage -python -m pip install coverage
          ./sage -python -m coverage run src/bin/sage-runtests --all --long -p2 --random-seed=286735480429121101562228604801325644303
        shell: sh .ci/docker-exec-script.sh BUILD /sage {0}

      - name: Prepare coverage results
        if: success() || failure()
        run: |
          venv/bin/python3 -m coverage combine src/.coverage/
          mkdir -p ${{ github.workspace }}/coverage-report
          venv/bin/python3 -m coverage xml -o ${{ github.workspace }}/coverage-report/coverage.xml
        shell: sh .ci/docker-exec-script.sh BUILD /sage {0}

      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v3
        with:
          directory: ./coverage-report
