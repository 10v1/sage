name: Reusable workflow for Cygwin

on:
  workflow_call:
    inputs:
      stage:
        type: string
      previous_stages:
        required: false
        type: string
      targets:
        type: string
      toxenv:
        default: local-cygwin-choco-standard
        type: string

jobs:
  stage:
    env:
      MAKE: make -j8
      SAGE_NUM_THREADS: 3
      CYGWIN: winsymlinks:native
      EXTRA_CONFIGURE_ARGS: --enable-fat-binary
      SAGE_LOCAL: /opt/sage-${{ github.sha }}
      LOCAL_ARTIFACT_NAME: sage-local-commit-${{ github.sha }}-${{ inputs.toxenv }}
      LOGS_ARTIFACT_NAME: logs-commit-${{ github.sha }}-${{ inputs.toxenv }}

    runs-on: windows-latest

    steps:
    - run: |
        git config --global core.autocrlf false
        git config --global core.symlinks true
    - uses: actions/checkout@v1
    - name: install cygwin and test prerequisites with choco
      shell: bash {0}
      run: |
        choco --version
        PACKAGES="python39 python39-pip"
        choco install $PACKAGES --source cygwin
    - uses: actions/download-artifact@v2
      with:
        name: ${{ env.LOCAL_ARTIFACT_NAME }}
        path: C:\\tools\\cygwin\\tmp
      if: inputs.previous_stages
    - name: Extract sage-local artifact
      run: |
        C:\\tools\\cygwin\\bin\\dash -l -c 'cd $(cygpath -u "$GITHUB_WORKSPACE") && .github/workflows/extract-sage-local.sh /tmp/sage-local-*.tar && tar --create --listed-incremental=/tmp/sage-local.snar --file /dev/null "${{ env.SAGE_LOCAL }}"'
      if: inputs.previous_stages
    - name: tox
      run: |
        C:\\tools\\cygwin\\bin\\bash -l -x -c 'cat /proc/cpuinfo'
        C:\\tools\\cygwin\\bin\\bash -l -x -c 'python3.9 -m pip install tox'
        C:\\tools\\cygwin\\bin\\bash -l -x -c 'cd $(cygpath -u "$GITHUB_WORKSPACE") && PREFIX="${{ env.SAGE_LOCAL }}" tox -e ${{ inputs.toxenv }} -- ${{ inputs.targets }}'
    - name: Prepare logs artifact
      shell: bash
      run: |
        mkdir -p "artifacts/$LOGS_ARTIFACT_NAME"; for a in "${{ env.SAGE_LOCAL }}"/var/tmp/sage/build/*; do if [ -d "$a" ]; then tar -c --remove-files -f "artifacts/$LOGS_ARTIFACT_NAME/$(basename "$a").tar" "$a"; fi; done; cp -r logs/*  "artifacts/$LOGS_ARTIFACT_NAME"
      if: always()
    - uses: actions/upload-artifact@v2
      with:
        path: artifacts
        name: ${{ env.LOGS_ARTIFACT_NAME }}
      if: always()
    - name: Print out logs for immediate inspection
      # The markup in the output is a GitHub Actions logging command
      # https://help.github.com/en/actions/automating-your-workflow-with-github-actions/development-tools-for-github-actions
      shell: bash
      run: |
        find "artifacts/$LOGS_ARTIFACT_NAME" -type f -name "*.log" -exec sh -c 'if tail -20 "{}" 2>/dev/null | grep "^Error" >/dev/null; then echo :":"error file={}:":" ==== LOG FILE {} CONTAINS AN ERROR ====; cat {} ; fi' \;
      if: always()
    - name: Prepare sage-local artifact
      # We specifically use the cygwin tar so that symlinks are saved/restored correctly on Windows.
      # We remove the $SAGE_LOCAL/lib64 link, which will be recreated by the next stage.
      run: |
        C:\\tools\\cygwin\\bin\\bash -l -c 'cd $(cygpath -u "$GITHUB_WORKSPACE") && rm -f "${{ env.SAGE_LOCAL }}"/lib64; tar -cf /tmp/sage-local-${{ inputs.stage }}.tar --listed-incremental=/tmp/sage-local.snar "${{ env.SAGE_LOCAL }}"'
      if: always()
    - uses: actions/upload-artifact@v2
      # upload-artifact@v2 does not support whitespace in file names.
      # so we tar up the directory ourselves
      with:
        path: C:\\tools\\cygwin\\tmp\\sage-local-${{ inputs.stage }}.tar
        name: ${{ env.LOCAL_ARTIFACT_NAME }}
      if: always()
